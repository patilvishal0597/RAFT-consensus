version: '3.8'
services:
  node1:
    container_name: Node1
    build:
      dockerfile: Dockerfile
      context: "./node"
    volumes:
    - /app/node_modules
    - ./node:/app
    - ./node/CurrentState.json:/app/CurrentState.json
    image: phase3_node
    restart: always
    ports:
      - 8089:5555
    environment:
      - SERVER_NAME=Node1

  node2:
    container_name : Node2
    build:
      dockerfile: Dockerfile
      context: "./node"
    volumes:
    - /app/node_modules
    - ./node:/app
    - ./node/CurrentState.json:/app/CurrentState.json
    image: phase3_node
    restart: always
    ports:
      - 8088:5555
    environment:
      - SERVER_NAME=Node2

  node3:
    container_name : Node3
    build:
      dockerfile: Dockerfile
      context: "./node"
    volumes:
    - /app/node_modules
    - ./node:/app
    - ./node/CurrentState.json:/app/CurrentState.json
    image: phase3_node
    restart: always
    ports:
      - 8087:5555
    environment:
      - SERVER_NAME=Node3

  node4:
    container_name : Node4
    build:
      dockerfile: Dockerfile
      context: "./node"
    volumes:
    - /app/node_modules
    - ./node:/app
    - ./node/CurrentState.json:/app/CurrentState.json
    image: phase3_node
    restart: always
    ports:
      - 8086:5555
    environment:
      - SERVER_NAME=Node4

  node5:
    container_name : Node5
    build:
      dockerfile: Dockerfile
      context: "./node"
    volumes:
    - /app/node_modules
    - ./node:/app
    - ./node/CurrentState.json:/app/CurrentState.json
    image: phase3_node
    restart: always
    ports:
      - 8085:5555
    environment:
      - SERVER_NAME=Node5

  controller:
     container_name: Controller
     build: Controller/.
     stdin_open: true
